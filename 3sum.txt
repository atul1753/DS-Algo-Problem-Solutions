
# 3 Sum
# Sort the array and then use two pointers after 1 loop. check for cases of duplicates

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        if(nums.size()<3)
            return ans;
        vector<int>v(3);
        for(int i=0;i<nums.size()-2;i++){
            int j=i+1;
            if(i==0 || (i>0 && nums[i]!=nums[i-1])){
            int k=nums.size()-1;
            while(j<k){
                if(nums[i]+nums[j]+nums[k]==0 && (j==i+1 ||(nums[j]!=nums[j-1])))
                {
                    v[0]=nums[i],v[1]=nums[j],v[2]=nums[k];
                    ans.push_back(v);
                    j++;
                    k--;
                }
                else if(nums[i]+nums[j]+nums[k]>0){
                    k--;
                }
                else
                {
                    j++;
                }
            }
            }
        }
        return ans;
    }
};