
# Minimum Sum Partition -> https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1
# Logic-> We have to minimize S2-S1, S2=Total_sum-S1, therefore, we have to minimize total_sum-2*S1

# Memoized
# Subsets 
# Similar logic as that of palindromic partioning, for each ind, iterate from ind till end.

class Solution{

	public:
	int find(int arr[],int ind,int sum,int total_sum,vector<vector<int>>&dp){
	   if(ind==0)
	    {
	        return (dp[ind][sum]=abs(total_sum-(2*sum)));
	    }
	    if(dp[ind][sum]!=-9999)
	    {
	        return dp[ind][sum];
	    }
	   return(dp[ind][sum]=min(find(arr,ind-1,sum+arr[ind-1],total_sum,dp),find(arr
	   ,ind-1,sum,total_sum,dp)));
	}
	int minDiffernce(int arr[], int n) 
	{ 
	    int sum=0;
	    for(int i=0;i<n;i++)
	    sum+=arr[i];
	    vector<vector<int>>dp(n+1,vector<int>(sum+1,-9999));
	    return find(arr,n,0,sum,dp);
	} 
};
