
# Next Permutation -> https://leetcode.com/problems/next-greater-element-iii/
# Eg. 123654 -> 124356
# Start from end and go until a[i] becomes > a[i-1], after this find the next just greater elem on the right side and swap i-1 with it, then sort a+i,a+n

class Solution {
public:
    int nextGreaterElement(int k) {
        string s = to_string(k);
        int n=s.length();
        int i;
        for(i=n-1;i>0;i--){
            if(s[i]>s[i-1])
                break;
        }
        if(i==0)
            return -1;
        else{
            int smallest=i-1,res,curr=INT_MAX;
            for(int j=i;j<n;j++){
                if(s[smallest]<s[j] && curr>s[j])
                {
                    curr=s[j];
                    res=j;
                }
            }
            swap(s[smallest],s[res]);
            sort(s.begin()+i,s.end());
            auto ans = stoll(s);
            return (ans > INT_MAX || ans <= n) ? -1 : ans;
        }
    }
};

# There is next permutaion directly available in STL also

class Solution {
public:
    int nextGreaterElement(int n) {
     auto digits = to_string(n);
    next_permutation(begin(digits), end(digits));
    auto res = stoll(digits);
    return (res > INT_MAX || res <= n) ? -1 : res;
    }
};