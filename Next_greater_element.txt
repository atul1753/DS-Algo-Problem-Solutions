
# Next greater element I -> https://leetcode.com/problems/next-greater-element-i/
# nums1 = [4,1,2], nums2 = [1,3,4,2]
# Output: [-1,3,-1]
# Logic is using stacks, start from last and if st.top > curr, then that is next greater elem, else pop till curr > st.top, if stack becomes empty, then there is no greater elem.

class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int>ans(nums2.size());
        vector<int>res(nums1.size());
        stack<int>s;
        for(int i=nums2.size()-1;i>=0;i--){
            if(s.empty() || nums2[i]<s.top()){
                if(s.empty())
                    ans[i]=(-1);
                else
                    ans[i]=(s.top());
                s.push(nums2[i]);
            }
            else{
                while(!s.empty() && nums2[i]>s.top()){
                    s.pop();
                }
                if(!s.empty())
                    ans[i]=(s.top());
                else
                    ans[i]=(-1);
                s.push(nums2[i]);
            }
        }
        for(int i=0;i<nums1.size();i++){
            for(int j=0;j<nums2.size();j++){
                if(nums1[i]==nums2[j])
                {
                    res[i]=ans[j];
                    break;
                } 
            }
        }
        return res;
    }
};