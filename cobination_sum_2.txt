
# Combination Sum 2->one number can be used only once
# use for loop inside recursion for not having the dupliacte elems, and the case of not taking the elm will be fulfilled by for loop

class Solution {
public:
    void find(vector<int>&a, int target, vector<vector<int>>&ans,vector<int>temp,int ind){
        if(target==0)
        {
            ans.push_back(temp);
            return;
        }
        for(int i=ind;i<a.size();i++){
            if(i>ind && a[i]==a[i-1])
                continue;
            if(a[i]>target)
                break;
            temp.push_back(a[i]);
            find(a,target-a[i],ans,temp,i+1);
            temp.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>temp;
        sort(candidates.begin(),candidates.end());
        find(candidates,target,ans,temp,0);
        return ans;
    }
};