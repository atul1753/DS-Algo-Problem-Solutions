
# K-th element of two sorted arrays -> https://practice.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array1317/1#
# Logic is same as that of median of two sorted arrays using binary search, just one change, here we will divide the elems on the basis of k. eg. if 2 elems go in 1st
# partition of 1st array, then k-2 will go in 1st partition of 2 nd array, previuosly it was (m+n)/2-2;

public:
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        if(n>m)
            return(kthElement(arr2,arr1,m,n,k));
        int low=max(0,k-m),hi=min(k,n);
        while(low<=hi){
            int cut1=(low+hi)/2;
            int cut2=k-cut1;
            int l1=cut1==0?INT_MIN:arr1[cut1-1];
            int l2=cut2==0?INT_MIN:arr2[cut2-1];
            int r1=cut1==n?INT_MAX:arr1[cut1];
            int r2=cut2==m?INT_MAX:arr2[cut2];
            if(l1<=r2 && l2<=r1)
                return(max(l1,l2));
            if(l1>r2)
                hi=cut1-1;
            else 
                low=cut1+1;
        }
        return 1;
    }