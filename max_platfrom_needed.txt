
# Max platform needed
# sort both arr and dep arrays. maintain two pointers. if arr[i]>dep[j], c--, j++, else c++,i++

class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    bool static compare(pair<int,int>&p1,pair<int,int>&p2){
        if(p1.second!=p2.second)
        return p1.second<p2.second;
        return p1.first<p2.first;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++)
        v.push_back(make_pair(start[i],end[i]));
        sort(v.begin(),v.end(),compare);
        int ans=1;
        pair<int,int>temp=v[0];
        for(int i=1;i<v.size();i++){
            if(temp.second<v[i].first){
                ans++;
                temp=v[i];
            }
        }
        return ans;
    }
};
