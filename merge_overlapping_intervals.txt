#Merge Sub intervals
#sort the array on the basis of first elem
#then iterate and check for temp[1]>curr[0]->temp[1]=max(temp[1],curr[1])

class Solution {
public:
    bool static compare(vector<int>v1,vector<int>v2)
    {
        if(v1[0]!=v2[0])
            return (v1[0]<v2[0]);
        return(v1[1]<v2[1]);
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),compare);
        vector<vector<int>>ans;
        vector<int>temp;
        temp.push_back(intervals[0][0]);
        temp.push_back(intervals[0][1]);
        for(int i=1;i<intervals.size();i++){
            if(temp[1]>=intervals[i][0]){
                if(temp[1]<intervals[i][1])
                temp[1]=intervals[i][1];
            }
            else{
                ans.push_back(temp);
                temp.clear();
                temp.push_back(intervals[i][0]);
                temp.push_back(intervals[i][1]);
            }
        }
        ans.push_back(temp);
        return ans;
    }
};