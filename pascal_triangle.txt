
#Pascal's Triangle -> https://leetcode.com/problems/pascals-triangle/
#for printing all
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        int n=numRows;
        vector<vector<int>>ans(n);
        ans[0].push_back(1);
        for(int i=1;i<n;i++){
            vector<int>curr(ans[i-1].size()+1);
            for(int j=0;j<curr.size();j++){
                if(j==0)
                    curr[0]=ans[i-1][0];
                else if(j==curr.size()-1)
                    curr[j]=ans[i-1][curr.size()-2];
                else{
                    curr[j]=ans[i-1][j-1]+ans[i-1][j];
                    }
            }
            ans[i]=(curr);
        }
        return ans;
    }
};

#If we want only for elem at m,n(i.e mth row, nth col) then elem = (m-1)C(n-1)=(m-1)!/(m-1)!(m-n-2)!
#If we want to print only a certain row, find all elems using the above formula. but that will take O(n^2).
# NcR=prev(NcR)value x (n-r+1)/(R)
#So, calculate for fisrt eg. 4c0, then 4c1=(4c0)x(4-1+1)/(1), then4c2=(4c1)x(4-2+1)/2
	
